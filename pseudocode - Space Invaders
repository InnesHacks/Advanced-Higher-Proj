import pygame
import os
import time

pygame.init()

White = (255, 255, 255)
Black = (0, 0, 0)

class Settings:
    def __init__(self):
        self.musicstate = True
        self.musictype = True
        self.soundeffects = True

    def get_settings(self):
        if not os.path.isfile("settings.txt"):
            self.write_file(False)
        else:
            settingsfile = open("settings.txt", "r")
            settings = settingsfile.read().split(",")
            settingsfile.close()
            self.musicstate = settings[0] == "True"
            self.musictype = settings[1] == "True"
            self.soundeffects = settings[2] == "True"

    def write_file(self, remove):
        if remove:
            os.remove("settings.txt")
        settings = open("settings.txt", "w")
        settings.write(str(self.musicstate) + ",")
        settings.write(str(self.musictype) + ",")
        settings.write(str(self.soundeffects))
        settings.close()

class Highscore:
    def __init__(self, name, value):
        self.name = name
        self.value = value

class ScoreBoard:
    def __init__(self):
        self.scores = []
        self.current_score = 0

    def check_score(self):
        if len(self.scores) < 10:
            return True
        else:
            for score in self.scores:
                if self.current_score > score.value:
                    return True

    def get_highscores(self):
        self.scores.clear()
        highscoresfile = open("highscores.txt", "r")
        scores = highscoresfile.read().split(",")
        highscoresfile.close()
        for i in range(0, len(scores) - 1, 2):
            name = scores[i]
            value = int(scores[i + 1])
            self.scores.append(Highscore(name, value))

class Image(pygame.sprite.Sprite):
    def __init__(self, path, xpos, ypos):
        pygame.sprite.Sprite.__init__(self)
        self.surface = pygame.display.get_surface()
        self.image = pygame.image.load(path)
        self.givenpos = (xpos, ypos)
        self.position = [xpos - (self.image.get_width() // 2), ypos - (self.image.get_height() // 2)]

    def display_image(self):
        self.surface.blit(self.image, self.position)

    def resize_image(self, scalefactor):
        self.image = pygame.transform.scale(self.image, (int(self.image.get_width() * scalefactor),
                                                         int(self.image.get_height() * scalefactor)))
        self.position = (self.givenpos[0] - (self.image.get_width() // 2), self.givenpos[1] - (self.image.get_height() // 2))

class Text(pygame.sprite.Sprite):
    def __init__(self, content, font_size, xpos, ypos, colour=White):
        pygame.sprite.Sprite.__init__(self)
        self.surface = pygame.display.get_surface()
        self.font = pygame.font.Font('resources/font/ca.ttf', font_size)
        self.text = self.font.render(content, False, colour)
        self.colour = colour
        self.givenpos = (xpos, ypos)
        self.position = (xpos - (self.text.get_width() // 2), ypos - (self.text.get_height() // 2))

    def display_text(self):
        self.surface.blit(self.text, self.position)

    def change_text(self, newtext, drawmethod):
        self.text = self.font.render(newtext, False, self.colour)
        self.position = [self.givenpos[0] - (self.text.get_width() // 2),
                         self.givenpos[1] - (self.text.get_height() // 2)]
        drawmethod()

class Player(pygame.sprite.Sprite):
    def __init__(self, xpos):
        pygame.sprite.Sprite.__init__(self)
        self.position = [xpos, 633]
        self.dead = False
        self.lives = 3
        self.image = Image('resources/sprite_Images/ship/ship.png', xpos, 633)
        self.image.resize_image(2)
        self.rect = self.image.image.get_rect()
        self.rect.center = self.position

    def kill_player(self, drawmethod):
        self.lives -= 1
        for _ in range(0, 5):
            self.image = Image('resources/sprite_Images/ship/ship_explode_one.png', self.position[0], self.position[1] - 4)
            drawmethod()
            time.sleep(0.05)
            self.image = Image('resources/sprite_Images/ship/ship_explode_two.png', self.position[0], self.position[1] + 3)
            drawmethod()
            time.sleep(0.05)
        self.position = [480, 633]
        self.image = Image('resources/sprite_Images/ship/ship.png', self.position[0], self.position[1])
        self.image.resize_image(2)
        self.rect = self.image.image.get_rect()
        self.rect.center = self.position
        drawmethod()

    def move(self, xdist):
        if not self.dead:
            self.position[0] += xdist
            self.image = Image('resources/sprite_Images/ship/ship.png', self.position[0], self.position[1])
            self.image.resize_image(2)
            self.rect = self.image.image.get_rect()
            self.rect.center = self.position

    def display_player(self):
        self.image.display_image()

class Shot(pygame.sprite.Sprite):
    def __init__(self, xpos):
        pygame.sprite.Sprite.__init__(self)
        self.position = [xpos, 633]
        self.image = Image('resources/sprite_Images/shot/player_Shot_Green.png', self.position[0], self.position[1])
        self.image.resize_image(2)
        self.moving = True
        self.rect = self.image.image.get_rect()
        self.rect.center = self.position

    def move(self):
        if self.moving:
            self.position[1] -= 10
            if self.position[1] > 525:
                self.image = Image('resources/sprite_Images/shot/player_Shot_Green.png', self.position[0],
                                   self.position[1])
            else:
                self.image = Image('resources/sprite_Images/shot/player_Shot.png', self.position[0], self.position[1])
                self.image.resize_image(2)
            self.rect = self.image.image.get_rect()
            self.rect.center = self.position

    def blowup(self):
        self.image = Image('resources/sprite_Images/shot/player_Shot_Black_Mask.png', self.position[0],
                           self.position[1])
        self.moving = False

    def display_shot(self):
        self.image.display_image()

class Alien(pygame.sprite.Sprite):
    def __init__(self, openpath, closepath, xpos, ypos):
        pygame.sprite.Sprite.__init__(self)
        self.position = [xpos, ypos]
        self.open_image = openpath
        self.close_image = closepath
        self.which_image = True
        self.dead = False
        self.image = Image(self.open_image, xpos, ypos)
        self.image.resize_image(2)
        self.points = 0
        self.rect = self.image.image.get_rect()
        self.rect.center = self.position

    def kill_alien(self):
        self.dead = True
        self.switch_image()

    def switch_image(self):
        if self.dead:
            self.image = Image('resources/sprite_Images/aliens/alien_Blast.png', self.position[0], self.position[1])
            self.image.resize_image(2)
        elif self.which_image:
            self.image = Image(self.close_image, self.position[0], self.position[1])
            self.image.resize_image(2)
            self.which_image = False
        else:
            self.image = Image(self.open_image, self.position[0], self.position[1])
            self.image.resize_image(2)
            self.which_image = True
        self.rect = self.image.image.get_rect()
        self.rect.center = self.position

    def move(self, xdist, ydist):
        if not self.dead:
            self.position[0] += xdist
            self.position[1] += ydist
            self.switch_image()
        else:
            self.kill()

    def display_alien(self):
        self.image.display_image()

class Alien10(Alien):
    def __init__(self, xpos, ypos):
        Alien.__init__(self, 'resources/sprite_Images/aliens/10pts_Open.png',
                       'resources/sprite_Images/aliens/10pts_Closed.png', xpos, ypos)
        self.points = 10

class Alien20(Alien):
    def __init__(self, xpos, ypos):
        Alien.__init__(self, 'resources/sprite_Images/aliens/20pts_Open.png',
                       'resources/sprite_Images/aliens/20pts_Closed.png', xpos, ypos)
        self.points = 20

class Alien30(Alien):
    def __init__(self, xpos, ypos):
        Alien.__init__(self, 'resources/sprite_Images/aliens/30pts_Open.png',
                       'resources/sprite_Images/aliens/30pts_Closed.png', xpos, ypos)
        self.points = 30

class MotherShip(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.position = [1000, 401]
        self.image = Image('resources/sprite_Images/aliens/mother_Ship.png', self.position[0], self.position[1])
        self.image.resize_image(2)
        self.rect = self.image.image.get_rect()
        self.rect.center = self.position

    def move(self):
        self.position[0] -= 4
        self.image = Image('resources/sprite_Images/aliens/mother_Ship.png', self.position[0], self.position[1])
        self.image.resize_image(2)
        self.rect = self.image.image.get_rect()
        self.rect.center = self.position

    def display_ship(self):
        self.image.display_image()

class AlienShot(pygame.sprite.Sprite):
    def __init__(self, xpos, ypos, left, right, mask, speed):
        pygame.sprite.Sprite.__init__(self)
        self.position = [xpos, ypos]
